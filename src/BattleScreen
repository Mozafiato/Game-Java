import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class BattleScreen extends JFrame {
    private Player player;
    private Enemy enemy;
    private JLabel playerLabel;
    private JLabel enemyLabel;
    private JButton attackButton;
    private JButton defendButton;

    public BattleScreen(Player player, Enemy enemy) {
        this.player = player;
        this.enemy = enemy;

    
        JPanel panel = new JPanel(new GridLayout(3, 2));
        panel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));

        playerLabel = new JLabel("Player Health: " + player.getHealth());
        enemyLabel = new JLabel("Enemy Health: " + enemy.getHealth());

        attackButton = new JButton("Attack");
        defendButton = new JButton("Defend");

        attackButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                player.attack(enemy);
                enemy.attack(player);
                updateHealthLabels();
                checkBattleResult();
            }
        });

        defendButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                player.defend();
                enemy.attack(player);
                updateHealthLabels();
                checkBattleResult();
            }
        });

        panel.add(new JLabel("Player:"));
        panel.add(new JLabel("Enemy:"));
        panel.add(playerLabel);
        panel.add(enemyLabel);
        panel.add(attackButton);
        panel.add(defendButton);

        setTitle("Battle Screen");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        getContentPane().add(panel);
        pack();
        setLocationRelativeTo(null);
    }

    private void updateHealthLabels() {
        playerLabel.setText("Player Health: " + player.getHealth());
        enemyLabel.setText("Enemy Health: " + enemy.getHealth());
    }

    private void checkBattleResult() {
        if (!player.isAlive() || !enemy.isAlive()) {
            endBattle();
        }
    }

    private void endBattle() {
        dispose();
    }
}
